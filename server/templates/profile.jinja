{% extends 'base.jinja' %}

{% block title %}
Your Profile
{% endblock title %}

{% block content %}
<!-- Hero Section -->
<section class="bg-gradient-to-r from-secondary to-primary py-20"> <!-- Gradient background -->
    <div class="max-w-7xl mx-auto px-4 py-12 sm:py-16 sm:px-6 lg:px-8 text-center">
        <div class="mb-8">
            {# TODO: change img url to user image #}
            <img src="https://via.placeholder.com/150/E0F7FA/FFFFFF?text=User" alt="User Avatar"
                class="rounded-full mx-auto h-24 w-24 border-4 border-white shadow-md"> <!-- Avatar Placeholder -->
        </div>
        <h1 class="text-4xl font-extrabold text-white sm:text-5xl lg:text-6xl tracking-tight mb-4">
            <!-- Larger, bolder title -->
            Welcome, <span id="profile-name" class="font-accent font-semibold">Loading...</span>
        </h1>
        <p class="mt-4 max-w-3xl mx-auto text-xl text-gray-100"> <!-- More descriptive tagline -->
            Explore your personalized food profile and manage your health preferences. Let's make healthy eating
            easier!
        </p>
    </div>
</section>

<!-- Edit Profile Button - Add this above the profile details section -->
<div class="container mx-auto px-4 sm:px-6 lg:px-8 py-4 text-center">
    <button id="edit-profile-button"
        class="bg-secondary hover:bg-primary text-white font-semibold py-2 px-6 rounded-md transition focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-opacity-50">
        <i class="fa-solid fa-pen-to-square mr-2"></i> Edit Profile
        {# TODO: on click open modal to change user details #}
    </button>
    <form method="post" action="{{ url_for('routes_bp.logout') }}">
        <button id="logout-profile-button"
            class="bg-secondary hover:bg-primary text-white font-semibold py-2 px-6 rounded-md transition focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-opacity-50">
            <i class="fa-solid fa-pen-to-square mr-2"></i> Logout
            {# TODO: on click open modal to change user details #}
        </button>
    </form>
</div>

<!-- User Profile Details Section -->
<div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="bg-white rounded-xl shadow-lg overflow-hidden"> <!-- Deeper shadow -->
        <div class="px-6 py-8 lg:p-10">
            <h2 class="text-3xl font-bold text-neutral mb-8 text-center">Your Profile Information</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                {% set profile_fields_left = [
                ('fa-user-tag', 'Profile Name', 'profile_name_detail', user.profile_name),
                ('fa-user', 'First Name', 'first_name', user.first_name),
                ('fa-user-group', 'Last Name', 'last_name', user.last_name),
                ('fa-venus-mars', 'Gender', 'gender', user.gender),
                ('fa-weight-scale', 'Weight', 'weight', user.weight ~ ' kg')
                ] %}

                {% set profile_fields_right = [
                ('fa-ruler-vertical', 'Height', 'height', user.height ~ ' cm'),
                ('fa-calendar-alt', 'Age', 'age', user.age ~ ' years'),
                ('fa-users', 'User Type', 'user_type', user.user_type),
                ('fa-utensils', 'Diet Type', 'diet_type', user.diet_type)
                ] %}

                <div>
                    {% for icon, label, element_id, value in profile_fields_left %}
                    <div class="flex items-center mb-3">
                        <i class="fa-solid {{ icon }} text-primary mr-2"></i>
                        <span class="font-semibold text-neutral mr-2">{{ label }}:</span>
                        <span id="{{ element_id }}" class="text-gray-700">{{ value or 'Loading...' }}</span>
                    </div>
                    {% endfor %}
                </div>

                <div>
                    {% for icon, label, element_id, value in profile_fields_right %}
                    <div class="flex items-center mb-3">
                        <i class="fa-solid {{ icon }} text-primary mr-2"></i>
                        <span class="font-semibold text-neutral mr-2">{{ label }}:</span>
                        <span id="{{ element_id }}" class="text-gray-700">{{ value or 'Loading...' }}</span>
                    </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Allergy and Diseases Sections as Cards -->
            <div class="mt-10 grid grid-cols-1 md:grid-cols-2 gap-6">
                <div id="allergy-info-card" class="bg-light-green rounded-lg p-6 shadow-sm">
                    <h3 class="font-semibold text-xl text-neutral mb-4">
                        <i class="fa-solid fa-exclamation-triangle text-red-500 mr-2"></i> Allergies
                    </h3>
                    <ul id="allergy-info-list" class="list-disc list-inside text-red-700">
                        {% if user.allergies %}
                        {% for allergy in user.allergies %}
                        <li>{{ allergy }}</li>
                        {% endfor %}
                        {% else %}
                        <li>Missing so, Loading allergy information...</li>
                        {% endif %}
                    </ul>
                </div>

                <div id="diseases-card" class="bg-light-green rounded-lg p-6 shadow-sm">
                    <h3 class="font-semibold text-xl text-neutral mb-4">
                        <i class="fa-solid fa-heartbeat text-red-500 mr-2"></i> Diseases
                    </h3>
                    <ul id="diseases-list" class="list-disc list-inside text-red-700">
                        {% if user.diseases %}
                        {% for disease in user.diseases %}
                        <li>{{ disease }}</li>
                        {% endfor %}
                        {% else %}
                        <li>Missing so, Loading disease information...</li>
                        {% endif %}
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal - Add this after the profile details section -->
{# <div id="edit-profile-modal" class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-title"
    role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!-- Modal background overlay -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- This element is to trick the browser into centering the modal content. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">
        </span>

        <!-- Modal panel -->
        <div
            class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div
                        class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <!-- Heroicon name: outline/exclamation -->
                        <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 9v2m0 4h.01m-6.938-9.01a7 7 0 1 1 13.876 0l-1.377 1.378m-8.476-1.378L16 7l-2.5 2.5m-2.885-1.038l-2.5 2.5m-2.885-1.038l-2.5 2.5" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                        <h3 class="text-lg leading-6 font-medium text-neutral" id="modal-title">
                            Edit Profile Information
                        </h3>
                        <div class="mt-4">
                            <form id="edit-profile-form" class="space-y-4">
                                <!-- Form fields will be inserted here by JavaScript -->
                                <div>
                                    <label for="edit-profile-name"
                                        class="block text-sm font-medium text-gray-700">Profile Name</label>
                                    <input type="text" name="profile_name" id="edit-profile-name"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-first-name" class="block text-sm font-medium text-gray-700">First
                                        Name</label>
                                    <input type="text" name="firstName" id="edit-first-name"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-last-name" class="block text-sm font-medium text-gray-700">Last
                                        Name</label>
                                    <input type="text" name="lastName" id="edit-last-name"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-gender"
                                        class="block text-sm font-medium text-gray-700">Gender</label>
                                    <select id="edit-gender" name="gender"
                                        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="edit-weight" class="block text-sm font-medium text-gray-700">Weight
                                        (kg)</label>
                                    <input type="number" name="weight" id="edit-weight"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-height" class="block text-sm font-medium text-gray-700">Height
                                        (cm)</label>
                                    <input type="number" name="height" id="edit-height"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-age" class="block text-sm font-medium text-gray-700">Age</label>
                                    <input type="number" name="age" id="edit-age"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-user-type" class="block text-sm font-medium text-gray-700">User
                                        Type</label>
                                    <select id="edit-user-type" name="userType"
                                        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
                                        <option value="General Fitness">General Fitness</option>
                                        <option value="Athlete">Athlete</option>
                                        <option value="Weight Loss">Weight Loss</option>
                                        <option value="Health Focused">Health Focused</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="edit-diet-type" class="block text-sm font-medium text-gray-700">Diet
                                        Type</label>
                                    <input type="text" name="dietType" id="edit-diet-type"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="edit-allergy-info"
                                        class="block text-sm font-medium text-gray-700">Allergies
                                        (comma-separated)</label>
                                    <input type="text" name="allergy_info" id="edit-allergy-info"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                        placeholder="e.g., peanuts, gluten, dairy">
                                </div>
                                <div>
                                    <label for="edit-diseases" class="block text-sm font-medium text-gray-700">Diseases
                                        (comma-separated)</label>
                                    <input type="text" name="diseases" id="edit-diseases"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                        placeholder="e.g., diabetes, hypertension">
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button id="save-profile-button" type="button"
                    class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary text-base font-medium text-white hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:ml-3 sm:w-auto sm:text-sm">
                    {# TODO: save user changes after pressing save in the modal #}
                    Save Changes
                </button>
                <button id="cancel-edit-button" type="button"
                    class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                    {# TODO: close modal for editing user details #}
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div> #}

<div id="edit-profile-modal" class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-title"
    role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!-- Modal background overlay -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true"></span>

        <!-- Modal panel -->
        <div
            class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div
                        class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 9v2m0 4h.01M5.06 4.93a7 7 0 1 1 13.88 0" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                        <h3 class="text-lg leading-6 font-medium text-neutral" id="modal-title">
                            Edit Profile Information
                        </h3>
                        <div class="mt-4">
                            <form id="edit-profile-form" class="space-y-4" method="POST"
                                action="{{ url_for('update_profile') }}">
                                {% set fields = [
                                ('text', 'Profile Name', 'profile_name', user.profile_name),
                                ('text', 'First Name', 'firstName', user.first_name),
                                ('text', 'Last Name', 'lastName', user.last_name),
                                ('number', 'Weight (kg)', 'weight', user.weight),
                                ('number', 'Height (cm)', 'height', user.height),
                                ('number', 'Age', 'age', user.age),
                                ('text', 'Diet Type', 'dietType', user.diet_type),
                                ('text', 'Allergies (comma-separated)', 'allergy_info', ', '.join(user.allergies) if
                                user.allergies else ''),
                                ('text', 'Diseases (comma-separated)', 'diseases', ', '.join(user.diseases) if
                                user.diseases else '')
                                ] %}

                                {% for type, label, name, value in fields %}
                                <div>
                                    <label for="edit-{{ name }}" class="block text-sm font-medium text-gray-700">{{
                                        label }}</label>
                                    <input type="{{ type }}" name="{{ name }}" id="edit-{{ name }}"
                                        class="mt-1 focus:ring-primary focus:border-primary block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"
                                        value="{{ value or '' }}">
                                </div>
                                {% endfor %}

                                <div>
                                    <label for="edit-gender"
                                        class="block text-sm font-medium text-gray-700">Gender</label>
                                    <select id="edit-gender" name="gender"
                                        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
                                        {% for option in ['Male', 'Female', 'Other'] %}
                                        <option value="{{ option }}" {% if user.gender==option %}selected{% endif %}>{{
                                            option }}</option>
                                        {% endfor %}
                                    </select>
                                </div>

                                <div>
                                    <label for="edit-user-type" class="block text-sm font-medium text-gray-700">User
                                        Type</label>
                                    <select id="edit-user-type" name="userType"
                                        class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
                                        {% for option in ['General Fitness', 'Athlete', 'Weight Loss', 'Health Focused']
                                        %}
                                        <option value="{{ option }}" {% if user.user_type==option %}selected{% endif %}>
                                            {{ option }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal Actions -->
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button id="save-profile-button" type="submit" form="edit-profile-form"
                    class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-primary text-base font-medium text-white hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:ml-3 sm:w-auto sm:text-sm">
                    Save Changes
                </button>
                <button id="cancel-edit-button" type="button"
                    class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

{% endblock content %}

{% block scripts %}
<script src="https://kit.fontawesome.com/0340a8219c.js" crossorigin="anonymous"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        const profileId = urlParams.get('id'); // Get profile ID from query parameter

        if (!profileId) {
            alert('Profile ID is missing in the URL.'); // Basic error handling
            return;
        }

        function fetchUserProfile(profileId) {
            fetch(`/api/profiles/${profileId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(userProfile => {
                    // Populate profile details on the page
                    document.getElementById('profile-name').textContent = userProfile.profile_name || 'N/A';
                    document.getElementById('profile-name-detail').textContent = userProfile.profile_name || 'N/A'; // Added for detail section
                    document.getElementById('first-name').textContent = userProfile.firstName || 'N/A';
                    document.getElementById('last-name').textContent = userProfile.lastName || 'N/A';
                    document.getElementById('gender').textContent = userProfile.gender || 'N/A';
                    document.getElementById('weight').textContent = userProfile.weight || 'N/A';
                    document.getElementById('height').textContent = userProfile.height || 'N/A';
                    document.getElementById('age').textContent = userProfile.age || 'N/A';
                    document.getElementById('user-type').textContent = userProfile.userType || 'N/A';
                    document.getElementById('diet-type').textContent = userProfile.dietType || 'N/A';

                    // Allergy Info List
                    const allergyInfoList = document.getElementById('allergy-info-list');
                    allergyInfoList.innerHTML = ''; // Clear loading text
                    if (userProfile.allergy_info && userProfile.allergy_info.length > 0) {
                        userProfile.allergy_info.forEach(allergy => {
                            const li = document.createElement('li');
                            li.textContent = allergy;
                            allergyInfoList.appendChild(li);
                        });
                    } else {
                        document.getElementById('allergy-info-card').style.display = 'none'; // Hide allergy card if no info
                    }

                    // Diseases List
                    const diseasesList = document.getElementById('diseases-list');
                    diseasesList.innerHTML = ''; // Clear loading text
                    if (userProfile.diseases && userProfile.diseases.length > 0) {
                        userProfile.diseases.forEach(disease => {
                            const li = document.createElement('li');
                            li.textContent = disease;
                            diseasesList.appendChild(li);
                        });
                    } else {
                        document.getElementById('diseases-card').style.display = 'none'; // Hide diseases card if no info
                    }
                    window.userProfile = userProfile; // Make userProfile globally accessible within the scope for populateEditForm

                })
                .catch(error => {
                    console.error('Error fetching profile details:', error);
                    alert('Failed to load profile details.'); // User-friendly error message
                });
        }

        fetchUserProfile(profileId); // Initial fetch of profile data

        const editProfileButton = document.getElementById('edit-profile-button');
        const editProfileModal = document.getElementById('edit-profile-modal');
        const cancelEditButton = document.getElementById('cancel-edit-button');
        const saveProfileButton = document.getElementById('save-profile-button');
        const editProfileForm = document.getElementById('edit-profile-form');

        // Function to open the modal
        editProfileButton.addEventListener('click', () => {
            editProfileModal.classList.remove('hidden'); // Show the modal
            populateEditForm(); // Populate the form with current data
        });

        // Function to close the modal
        function closeModal() {
            editProfileModal.classList.add('hidden'); // Hide the modal
        }

        cancelEditButton.addEventListener('click', closeModal);

        // Close modal if clicked outside the modal panel (optional, but nice UX)
        window.addEventListener('click', (event) => {
            if (event.target === editProfileModal) {
                closeModal();
            }
        });

        // Function to populate the edit form with existing profile data
        function populateEditForm() {
            document.getElementById('edit-profile-name').value = document.getElementById('profile-name-detail').textContent; // Use profile-name-detail from detail section
            document.getElementById('edit-first-name').value = document.getElementById('first-name').textContent;
            document.getElementById('edit-last-name').value = document.getElementById('last-name').textContent;
            document.getElementById('edit-gender').value = document.getElementById('gender').textContent;
            document.getElementById('edit-weight').value = document.getElementById('weight').textContent.replace(' kg', ''); // Remove ' kg'
            document.getElementById('edit-height').value = document.getElementById('height').textContent.replace(' cm', ''); // Remove ' cm'
            document.getElementById('edit-age').value = document.getElementById('age').textContent.replace(' years', ''); // Remove ' years'
            document.getElementById('edit-user-type').value = document.getElementById('user-type').textContent;
            document.getElementById('edit-diet-type').value = document.getElementById('diet-type').textContent;

            // Handle Allergies and Diseases - if they are lists, join them to comma-separated strings for input
            const allergyList = window.userProfile.allergy_info || [];
            document.getElementById('edit-allergy-info').value = allergyList.join(', ');
            const diseasesList = window.userProfile.diseases || [];
            document.getElementById('edit-diseases').value = diseasesList.join(', ');
        }


        // Function to handle form submission (Save Changes)
        saveProfileButton.addEventListener('click', (event) => {
            event.preventDefault(); // Prevent default form submission

            const profileId = urlParams.get('id'); // Get profile ID again
            if (!profileId) {
                alert('Profile ID is missing.');
                return;
            }

            const formData = new FormData(editProfileForm);
            const updatedProfileData = {};
            formData.forEach((value, key) => {
                updatedProfileData[key] = value;
            });

            // Split comma-separated strings back into lists for allergies and diseases
            updatedProfileData.allergy_info = updatedProfileData.allergy_info.split(',').map(item => item.trim()).filter(item => item); // Trim and filter empty strings
            updatedProfileData.diseases = updatedProfileData.diseases.split(',').map(item => item.trim()).filter(item => item); // Trim and filter empty strings


            fetch(`/api/profiles/${profileId}`, { // **Important: Use PUT method for updates**
                method: 'PUT', // Or PATCH, depending on your API design (PUT replaces entire resource, PATCH partially updates)
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updatedProfileData),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(updatedUserProfile => {
                    console.log('Profile updated successfully:', updatedUserProfile);
                    alert('Profile updated successfully!'); // User feedback
                    closeModal(); // Close the modal
                    // Reload profile data to update the displayed information
                    fetchUserProfile(profileId); // Re-fetch and update the page data
                })
                .catch(error => {
                    console.error('Error updating profile:', error);
                    alert('Failed to update profile. Please try again.'); // User-friendly error message
                });
        });
    });
</script>
{% endblock scripts %}